[
  {
    "params": [
      { "type": "Location", "name": "<L>" },
      { "type": "Vehicles", "name": "<V>" },
      { "type": "Vehicles", "name": "<V2>" },
      { "type": "Vehicles", "name": "<V3>" }
    ],
    "questions": [
      {
        "text": "What is the majority of vehicles near <L> <V> <V2> or <V3>?"
      },
      {
        "text": "Between the following vehicles near <L> which are most? <V> <V2> or <V3>?"
      },
      {
        "text": "Are the more <V> <V2> or <V3> near <L>?"
      },
      {
        "text": "Would i find more <V> <V2> or <V3> near <L> right now?"
      },
      {
        "text": "Counting vehicles right now near <L> are there more <V> <V2> or <V3>?" 
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [1], "side_inputs": ["<L>", "<V>"] },
      { "inputs": [], "type": "scene" },
      { "inputs": [1], "side_inputs": ["<L>", "<V2>"] },
      { "inputs": [], "type": "scene" },
      { "inputs": [1], "side_inputs": ["<L>", "<V3>"] },
      { "inputs": [2, 3, 4, 5], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterVehicles", "name": "<V>" },
      { "function": "filterVehicles", "name": "<V2>" },
      { "function": "filterVehicles", "name": "<V3>" },
      { "function": "filterLocation", "name": "<L>" },
      { "function": "queryMax", "name": "max" }
    ]
  },
  {
    "params": [
      { "type": "Location", "name": "<L>" },
      { "type": "Vehicles", "name": "<V>" },
      { "type": "Vehicles", "name": "<V2>" },
      { "type": "Vehicles", "name": "<V3>" }
    ],
    "questions": [
      {
        "text": "What type of vehicles is the least near <L> <V> <V2> or <V3>?"
      },
      {
        "text": "Between the following vehicles near <L> which are the least? <V> <V2> or <V3>?"
      },
      {
        "text": "Are the less <V> <V2> or <V3> than the rest near <L>?"
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [1], "side_inputs": ["<L>", "<V>"] },
      { "inputs": [], "type": "scene" },
      { "inputs": [1], "side_inputs": ["<L>", "<V2>"] },
      { "inputs": [], "type": "scene" },
      { "inputs": [1], "side_inputs": ["<L>", "<V3>"] },
      { "inputs": [2, 3, 4, 5], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterVehicles", "name": "<V>" },
      { "function": "filterVehicles", "name": "<V2>" },
      { "function": "filterVehicles", "name": "<V3>" },
      { "function": "filterLocation", "name": "<L>" },
      { "function": "queryMin", "name": "min" }
    ]
  },
  {
    "params": [
      { "type": "Location", "name": "<L>" },
      { "type": "Vehicles", "name": "<V>" },
      { "type": "Vehicles", "name": "<V2>" },
      { "type": "Vehicles", "name": "<V3>" }
    ],
    "questions": [
      {
        "text": "What is the number plate of the <V> with the highest over the speed limit speed near <L>?"
      },
      {
        "text": "If there are <V> travelling over the speed limit near <L> what is the number plate of the one going the fastest?"
      },
      {
        "text": "What is the number plate of the fastest <V> exceeding the speed limit near <L>?"
      },
      {
        "text": "If there are <V> currently exceeding the speed limit near <L> what is the number plate of the one going the fastest?"
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [0], "side_inputs": ["<L>", "<V>"] },
      { "inputs": [1,2], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterLocation", "name": "<L>" },
      { "function": "filterVehicles", "name": "<V>" },
      { "function": "filterFastest", "name": "fastest" },
      { "function": "queryMax", "name": "max" }
    ]
  },
  {
    "params": [
      { "type": "Location", "name": "<L>" },
      { "type": "Disasters", "name": "<D>" },
      { "type": "EmergencyVehicle", "name": "<EV>" }
    ],
    "questions": [
      {
        "text": "What is the distance of the nearest <EV> to the on going <D>?"
      },
      {
        "text": "How close is the nearest <EV> to the on going <D>?"
      },
      {
        "text": "How far is the nearest <EV> to the on going <D>?"
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [0], "side_inputs": ["<D>", "<L>"] },
      { "inputs": [], "side_inputs": ["<EV>", "<L>"] },
      { "inputs": [1, 3], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterEmergencyVehicles", "name": "<EV>" },
      { "function": "filterEmergency", "name": "<D>" },
      { "function": "filterLocation", "name": "<L>" },
      { "function": "queryDistanceMin", "name": "queryDistanceMin" }
    ]
  },
  {
    "params": [
      { "type": "Location", "name": "<L>" },
      { "type": "Disasters", "name": "<D>" },
      { "type": "EmergencyVehicle", "name": "<EV>" }
    ],
    "questions": [
      {
        "text": "What is the distance of the furthest <EV> to the on going <D>?"
      },
      {
        "text": "How close is the furthest <EV> to the on going <D>?"
      },
      {
        "text": "How far is the furthest <EV> to the on going <D>?"
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [0], "side_inputs": ["<D>", "<L>"] },
      { "inputs": [], "side_inputs": ["<EV>", "<L>"] },
      { "inputs": [1, 3], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterEmergencyVehicles", "name": "<EV>" },
      { "function": "filterEmergency", "name": "<D>" },
      { "function": "filterLocation", "name": "<L>" },
      { "function": "queryDistanceMax", "name": "queryDistanceMax" }
    ]
  },
  {
    "params": [
      { "type": "Location", "name": "<L>" },
      { "type": "Disasters", "name": "<D>" },
      { "type": "EmergencyVehicle", "name": "<EV>" }
    ],
    "questions": [
      {
        "text": "Where would i find the furthest <EV> to the on going <D>?"
      },
      {
        "text": "Relative to the on going <D> where would i find the furthest <EV> ?"
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [0], "side_inputs": ["<D>", "<L>"] },
      { "inputs": [], "side_inputs": ["<EV>", "<L>"] },
      { "inputs": [1, 3], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterEmergencyVehicles", "name": "<EV>" },
      { "function": "filterEmergency", "name": "<D>" },
      { "function": "filterLocation", "name": "<L>" },
      { "function": "queryLocation", "name": "queryLocation" }
    ]
  },
  {
    "params": [
      { "type": "Location", "name": "<L>" },
      { "type": "Disasters", "name": "<D>" },
      { "type": "EmergencyVehicle", "name": "<EV>" }
    ],
    "questions": [
      {
        "text": "Where would i find the closest <EV> to the on going <D>?"
      },
      {
        "text": "Relative to the on going <D> where would i find the closest <EV> ?"
      },
      {
        "text": "Where would i find the nearest <EV> to the on going <D>?"
      },
      {
        "text": "Relative to the on going <D> where would i find the nearest <EV> ?"
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [0], "side_inputs": ["<D>", "<L>"] },
      { "inputs": [], "side_inputs": ["<EV>", "<L>"] },
      { "inputs": [1, 3], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterEmergencyVehicles", "name": "<EV>" },
      { "function": "filterEmergency", "name": "<D>" },
      { "function": "filterLocation", "name": "<L>" },
      { "function": "queryLocation", "name": "queryLocation" }
    ]
  },
  {
    "params": [
      { "type": "MathMinMaxes", "name": "<MinMax>" },
      { "type": "EmergencyVehicle", "name": "<EV>" }
    ],
    "questions": [
      {
        "text": "Where is <MinMax> concentration of people currently?"
      },
      {
        "text": "Where would I find <MinMax> concentration people in town?"
      },
      {
        "text": "If I search in town where can I find <MinMax> concentration people?"
      }
    ],
    "nodes": [
      { "inputs": [], "type": "scene" },
      { "inputs": [0], "side_inputs": ["<L>", "<MinMax>"] },
      { "inputs": [1, 2], "type": "query" }
    ],
    "functions_map": [
      { "function": "filterLocation", "name": "<L>" },
      { "function": "count", "name": "<MinMax>" },
      { "function": "queryLocation", "name": "queryLocation" }
    ]
  }
]
